NAME: weather
LAST DEPLOYED: Sun Jan  7 21:09:37 2024
NAMESPACE: default
STATUS: pending-install
REVISION: 1
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
affinity: {}
app_name: opk-weather
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
credentials:
  APIKEY: ZWNiYzM5NmY0Nm1zaGI2NWNiYjFmODJjZjMzNHAxZmNjODdqc25hNWU5NjJhM2M1NDI=
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: prinsoo/weather-app
  tag: weather.v1
imagePullSecrets: []
ingress:
  annotations: {}
  className: ""
  enabled: false
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 5000
  type: NodePort
serviceAccount:
  annotations: {}
  create: false
  name: ""
tolerations: []

HOOKS:
---
# Source: weather/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "weather-test-connection"
  labels:
    helm.sh/chart: weather-0.1.0
    app.kubernetes.io/name: weather
    app.kubernetes.io/instance: weather
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['weather:5000']
  restartPolicy: Never
MANIFEST:
---
# Source: weather/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: opk-weather-secret
type: Opaque
data:
  APIKEY: ZWNiYzM5NmY0Nm1zaGI2NWNiYjFmODJjZjMzNHAxZmNjODdqc25hNWU5NjJhM2M1NDI=
---
# Source: weather/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opk-weather-service

spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      name: http
  selector:
    app: opk-weather
---
# Source: weather/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opk-weather

spec:
  replicas: 1
  selector:
    matchLabels:
      app: opk-weather
  template:
    metadata:
      labels:
       app: opk-weather
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: opk-weather
          securityContext:
            {}
          image: "prinsoo/weather-app:weather.v1"
          imagePullPolicy: IfNotPresent
          env:
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: opk-weather-secret     
                  key: APIKEY
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}

NOTES:
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services weather)
  export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
